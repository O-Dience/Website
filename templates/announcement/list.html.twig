{% extends 'base.html.twig' %}

{% block title %}
	{{ parent() }}
	- Liste des annonces
{% endblock %}


{% block stylesheets %}
	<link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Roboto+Slab:400,700|Material+Icons">

	<link href='{{asset('assets/css/announcement_list.css')}}' rel='stylesheet' type='text/css'>
	<link href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet">
{% endblock %}


{% block body %}

	<div class="container-fluid list__wrapper">
		<div class="row main__div mt-5">
			<div class="border_announcement w-100 pb-5">
				<h1 class="text-center text-info h2 mt-5">Liste des annonces</h1>
				{% include 'partials/_filters.html.twig' %}
				<div class="col-lg-11 col-xl-9 mx-lg-auto">
					{% for announcement in announcements %}
						<div class="list-group panel my-2">
							<div
								href="#" class="list-group-item d-flex flex-column align-items-center justify-content-center flex-md-row bg-white mb-1 p-3">

								{# PICTURE #}
								{% if announcement.image is not empty %}
									<div class="media d-flex justify-content-center">
										<figure class="">
											<img class="media-object rounded img-fluid" src="{{asset('/assets/images/avatar_user/') ~ announcement.user.picture}}">
										</figure>
									</div>
								{% elseif announcement.user.picture is not empty %}
									<div class="media d-flex justify-content-center">
										<figure class="">
											<img class="media-object rounded img-fluid" src="{{asset('/assets/images/avatar_user/') ~ announcement.user.picture}}">
										</figure>
									</div>
								{% endif %}
								{# /PICTURE #}

								<div
									class=" d-flex flex-column align-items-center px-md-5 announcement__content">
									{# CONTENT #}
									<div class="">
										<div class="d-flex flex-column flex-md-row justify-content-between">
											<h3 class="h4 text-centertext-md-left">{{announcement.title}}
												<em class="user_name">
													(<a href="{{path('user_show', {'id' : announcement.user.id})}}">{{announcement.user}}</a>)
												</em>
											</h3>
											{% if announcement.updatedAt is not empty and announcement.updatedAt != announcement.createdAt %}
												<p class="font-italic text-black-50 d-flex flex-md-row-reverse text-left text-md-right announcement__date">
													Modifié le
													{{ announcement.updatedAt ? announcement.updatedAt|date('d-m-Y à H:i') : '' }}
												</p>
											{% else %}
												<p class="font-italic text-black-50 d-flex flex-md-row-reverse text-left text-md-right announcement__date">
													Publiée le
													{{ announcement.createdAt ? announcement.createdAt|date('d-m-Y à H:i') : '' }}</p>
											{% endif %}
										</div>
										<p class="d-none d-sm-block">{{ announcement.content | slice (0, 150) }}...</p>
									</div>
									{# /CONTENT #}
									{# CATEGORIES AND SOCIALS #}
									<div class="d-flex flex-column flex-md-row w-100 justify-content-around align-items-between">
										<div class="d-flex flex-column">
											<small>Catégories</small>
											<div class="d-flex">
												{% for category in announcement.categories %}
													<div class="d-flex flex-column mx-auto">
														<div>
															<span data-category-id="{{ category.id }}"></span>
														</div>
														<div class="mx-auto ">
															<img src="{{asset('/assets/images/category_picto/') ~ category.picto}}" class="img_resize mt-2">
														</div>
													</div>
												{% endfor %}
											</div>
										</div>
										<div class="d-flex flex-column">
											<small>Plateformes requises</small>
											<div class="d-flex">
												{% for network in announcement.socialNetworks %}
													<div class=" flex-row mx-auto">
														<div class="mx-auto">
															<span class="d-none" data-network-id="{{ network.id }}"></span>
														</div>
														<div class="mx-auto">
															<img src="{{asset('/assets/images/social_picto/') ~ network.picto}}" class="img_resize mt-2">
														</div>
													</div>
												{% endfor %}
											</div>
										</div>
									</div>
									{# /CATEGORIES AND SOCIALS #}
								</div>
								{# BUTTONS #}
								<div class=" my-2 my-md-0 d-flex flex-column justify-content-center">
									<a href="{{path('announcement_favorite', {'id': announcement.id}) }}" class="link_fav js-fav btn btn-info btn-sm btn-block btn_color w-60 my-1">
										{% if app.user and announcement.isFavByUser(app.user) %}
											<i class="fa fa-heart fa-lg mr-2 "></i>
											<span class="favtext">Retirer des favoris</span>
										{% else %}
											<i class="fa fa-heart-o fa-lg mr-2"></i>
											<span class="favtext">Ajouter aux favoris</span>
										{% endif %}
									</a>
									<a href="{{ path('announcement_show', {id:announcement.id }) }}" class="btn btn-info btn-sm btn-block btn_color w-60 my-1">
										<i class="fa fa-eye fa-lg mr-2"></i>
										<span class="show_ann">Consulter l'annonce</span>
									</a>
								</div>
								{# /BUTTONS #}
							</div>
						</div>
					{% endfor %}
				</div>
			</div>
		</div>
	</div>
{% endblock %}

{% block javascripts %}
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script>

    let categoryFilter = '';
    let networkFilter = '';
		    // Filters announcements by category
    function filterByCategory(evt) {
        categoryFilter = evt.target.value;
        updateDisplay();
    }

    // Filters announcements by social network
    function filterByNetwork(evt) {
        networkFilter = evt.target.value;
        updateDisplay();
    }

    // Updates display of announcements according to the filters
    function updateDisplay() {
        document.querySelectorAll('.panel').forEach(function(announcement){
            let foundCategory = false;
            let foundNetwork = false;
            
            if (categoryFilter == '') {
                foundCategory = true;
            }
            else {
                announcement.querySelectorAll('span[data-category-id]').forEach(function(categoryTag){
                    if (categoryTag.dataset.categoryId == categoryFilter) {
                        foundCategory = true;
                    }
                })
            }

            if (networkFilter == '') {
                foundNetwork = true;
            }
            else {
                announcement.querySelectorAll('span[data-network-id]').forEach(function(network){
                    if (network.dataset.networkId == networkFilter) {
                        foundNetwork = true;
                    }
                })
            }
            
            if (foundCategory && foundNetwork) {

							announcement.classList.remove("d-none")
							announcement.nextElementSibling.classList.remove("d-none")
            }
            else {
							announcement.classList.add("d-none")
							announcement.nextElementSibling.classList.add("d-none")
            }
        })
    }

        function onClickBtnFav(evt){
        evt.preventDefault()
        const url = this.href
        const icone = this.querySelector('i');
        let favlink = evt.currentTarget;
        let favtext = this.querySelector('.favtext');
        

        axios.get(url).then(function(response){
            if(icone.classList.contains('fa-heart-o')){
                icone.classList.replace('fa-heart-o', 'fa-heart')
                favtext.innerHTML = "Retirer des favoris";
                
            } else{
                icone.classList.replace('fa-heart', 'fa-heart-o')
                favtext.innerHTML = "Ajouter aux favoris";
                
            }
        });
    }

        document.querySelectorAll('a.js-fav').forEach(function(link){
        link.addEventListener('click', onClickBtnFav)
    })
    document.querySelectorAll('a.js-report').forEach(function(link){
        link.addEventListener('click', onClickBtnReport);
    })

		document.getElementById('category_label').addEventListener('change', filterByCategory);
    document.getElementById('socialNetwork_name').addEventListener('change', filterByNetwork);
		</script>
{% endblock %}
