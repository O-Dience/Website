{% extends 'base.html.twig' %}

{% block title %} {{ parent() }} - Liste des annonces{% endblock %}


{% block stylesheets %}
<link href='{{asset('assets/css/announcement_list.css')}}' rel='stylesheet' type='text/css'>
<link href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet">
{% endblock %}

{% block javascript %}
<script src="//netdna.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
<script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
{% endblock %}

{% block body %}



<div class="container mt-5">
    <div class="row">
		<div class="border_announcement" >
        <h1 class="text-center mt-3">Liste des annonces</h1>
            <div class="">
                <div class="d-flex mb-5 mt-3">
                    <form class="form-inline my-2 my-lg-0 mx-auto">
                        <input class="form-control mr-sm d-none d-md-block" name="search" type="search" placeholder="Search" aria-label="Search">
                        <button class="btn btn-outline-success my-2 my-sm-0 d-none d-md-block" type="submit">Search</button>
                        <select name="category" id="category_label">
                            <option value="">Trier par catégorie</option>
                            {% for category in categories %}
                            <option value="{{category.id}}">{{category.label}}</option>
                            {% endfor %}
                        </select>
                        <select name="socialNetwork" id="socialNetwork_name">
                            <option value="">Trier selon le réseau social</option>
                            {% for socialNetwork in socialNetworks %}
                            <option value="{{socialNetwork.id}}">{{socialNetwork.name}}</option>
                            {% endfor %}
                        </select>
                    </form>
                </div>
                {% for announcement in announcements %}
                <div class="list-group">
                    <div href="#" class="list-group-item d-flex background_color">
                        {% if announcement.image is not empty %} 
                        <div class="media col-md-2">
                            <figure class="float-left">
                                <img class="media-object rounded img-fluid"  src="{{asset('/assets/images/avatar_user/') ~ announcement.user.picture}}">
                            </figure>
                        </div>
                        {% elseif announcement.user.picture is not empty %}
                        <div class="media col-md-2 mt-3">
                            <figure class="float-left">
                                <img class="media-object rounded img-fluid"  src="{{asset('/assets/images/avatar_user/') ~ announcement.user.picture}}">
                            </figure>
                        </div>
                        {% endif %} 
                        <div class="col-md-7">
                           <div class="d-flex justify-content-between">
                                <h3 class="">{{announcement.title}}
                                    <em class="user_name">
                                        <a href="{{path('user_show', {'id' : announcement.user.id})}}">({{announcement.user}})
                                        </a>
                                    </em>
                                </h3>
                                {% if announcement.updatedAt is not empty %}
                                    <p class="font-italic text-black-50 d-flex flex-row-reverse mt-2"> Annonce modifiée le {{ announcement.updatedAt ? announcement.updatedAt|date('d-m-Y à H:i') : '' }} </p>
                                {% else %}
                                    <p class="font-italic text-black-50 d-flex flex-row-reverse mt-2"> Publiée le {{ announcement.createdAt ? announcement.createdAt|date('d-m-Y à H:i') : '' }}</p>
                                {% endif %}
                            </div>
                            <p class="">{{announcement.content | slice (0, 150)}}...</p>
                            <div class="d-flex justify-content-between col-md-8">
                                <div class="d-flex">
                                    {% for category in announcement.categories %}
                                    <div class="d-flex flex-column mx-auto">
                                        <div>
                                            <span class="badge badge-secondary mt-2" data-category-id="{{ category.id }}"> {{category.label}}</span>
                                        </div>
                                        <div class="mx-auto">
                                            <img src="{{asset('/assets/images/category_picto/') ~ category.picto}}" class="img_resize mt-2">
                                        </div>
                                    </div>
                                    {% endfor %}
                                </div>
                                <div class="d-flex mx-auto">
                                    {% for network in announcement.socialNetworks %}
                                    <div class="d-flex flex-column mx-auto">
                                        <div class="mx-auto">
                                            <span class="badge badge-secondary mt-2" data-network-id="{{ network.id }}"> {{network.name}}</span>
                                        </div>
                                        <div>
                                            <img src="{{asset('/assets/images/social_picto/') ~ network.picto}}" class="img_resize mt-2">
                                        </div>
                                    </div>
                                    {% endfor %}
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 text-center btn_div">
                            <button type="button" class="btn btn-default btn-lg btn-block btn_color">
                                <a href="{{ path('announcement_show', {id:announcement.id }) }}" class="link_fav">   
                                    {% if app.user and announcement.isFavByUser(app.user) %}
                                    <i class="fa fa-heart fa-lg mr-2"></i> <span class="favtext">Dans vos favoris</span>
                                    {% else %}
                                    <i class="fa fa-heart-o fa-lg mr-2"></i> <span class="favtext">Ajouter à vos favoris</span>
                                    {% endif %}
                                </a>
                            </button>
                            <button type="button" class="btn btn-default btn-lg btn-block btn_color">
                                <a href="{{ path('announcement_show', {id:announcement.id }) }}" class="show_link">
                                    <i class="fa fa-eye fa-lg mr-2"></i> 
                                    <span class="show_ann">Consulter l'annonce</span>
                                </a>
                            </button>
                        </div>
                    </div>
                </div>
                {% endfor %}
            </div>
        </div>
	</div>
</div>

{% endblock %}

{% block javascripts %}
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script>

    let categoryFilter = '';
    let networkFilter = '';
        
    function onClickBtnFav(evt){
        evt.preventDefault()
        const url = this.href
        const icone = this.querySelector('i');
        let favlink = evt.currentTarget;
        let favtext = this.querySelector('.favtext');

        axios.get(url).then(function(response){

            if(icone.classList.contains('fa-heart-o')){
                icone.classList.replace('fa-heart-o', 'fa-heart')
                favtext.innerHTML = "Retirer des favoris";
            } else{
                icone.classList.replace('fa-heart', 'fa-heart-o')
                favtext.innerHTML = "Ajouter aux favoris";
            }
        });
    }

    function onClickBtnReport(evt){
        evt.preventDefault()
        const url = this.href;
        let reportlink = evt.currentTarget;
        axios.get(url).then(function(response){
            if(reportlink.classList.contains('ann-not-reported')){
                reportlink.classList.replace('ann-not-reported', 'ann-reported');
                reportlink.childNodes[1].nodeValue = " Annonce signalée !";
            }
        });
    }

    // Filters announcements by category
    function filterByCategory(evt) {
        categoryFilter = evt.target.value;
        updateDisplay();
    }

    // Filters announcements by social network
    function filterByNetwork(evt) {
        networkFilter = evt.target.value;
        updateDisplay();
    }

    // Updates display of announcements according to the filters
    function updateDisplay() {
        document.querySelectorAll('.panel').forEach(function(announcement){
            let foundCategory = false;
            let foundNetwork = false;
            
            if (categoryFilter == '') {
                foundCategory = true;
            }
            else {
                announcement.querySelectorAll('span[data-category-id]').forEach(function(categoryTag){
                    if (categoryTag.dataset.categoryId == categoryFilter) {
                        foundCategory = true;
                    }
                })
            }

            if (networkFilter == '') {
                foundNetwork = true;
            }
            else {
                announcement.querySelectorAll('span[data-network-id]').forEach(function(network){
                    if (network.dataset.networkId == networkFilter) {
                        foundNetwork = true;
                    }
                })
            }
            
            if (foundCategory && foundNetwork) {
                announcement.style.display = 'flex';
                announcement.nextElementSibling.style.display = 'flex';
            }
            else {
                announcement.style.display = 'none';
                announcement.nextElementSibling.style.display = 'none';
            }
        })
    }

    document.getElementById('category_label').addEventListener('change', filterByCategory);
    document.getElementById('socialNetwork_name').addEventListener('change', filterByNetwork);
    document.querySelectorAll('a.js-fav').forEach(function(link){
        link.addEventListener('click', onClickBtnFav)
    })
    document.querySelectorAll('a.js-report').forEach(function(link){
        link.addEventListener('click', onClickBtnReport);
    })
    </script>
{% endblock %}